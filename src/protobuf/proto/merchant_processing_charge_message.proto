syntax = "proto3";

package informaticsmatters.protobuf.accountserver;

// A Processing Charge message (originated by a Merchant).
//
// Processing charges are sent my Merchants and represent the costs of
// CPU effort consumed (a COST), converted to COINS.
// The charge is used to accumulate to total COINS consumed by a Product.
message MerchantProcessingChargeMessage {
  // Fields 1..15
  //
  // An ISO8601 UTC string that includes a timezone.
  // Typically something like 2021-12-31T00:00:00.00Z
  string timestamp = 1;

  // The merchant responsible for submitting the charge.
  string merchant_kind = 2;
  string merchant_name = 3;
  uint32 merchant_id = 4;

  // All charges have an authorisation code.
  // This will have been provided by the Account Server.
  // All related charges will contain the same authorisation code.
  uint32 auth_code = 6;

  // Name assigned to the charge
  string name = 7;

  // The coin value.
  // A string representation of Coins,
  // a string representation of a Python Decimal rather.
  // Financial information will always use a decimal representation.
  string coins = 8;

  // Processing charges often have 'sequence number',
  // providing a logical ordering of charges.
  uint32 sqn = 9;

  // End of charge?
  // The final charge in any sequence will set the 'eoc' property
  // indicating that no further charges for this authorisation code
  // are expected.
  bool eoc = 10;

  // Fields 16..2047

  // The User, Product (or Unit or Organisation) providing the funds.
  // The User is optional and one of Product or Unit or Organisation
  // will be provided but not necessarily all.
  string user = 16;
  string product = 17;
  string unit = 18;
  string organisation = 19;

  // Any charge-specific additional material.
  // If encountered this should be a string representation of
  // a dictionary/map. The keys and values are not
  // interpreted, they're simply passed-on verbatim.
  string additional_data = 30;
}
